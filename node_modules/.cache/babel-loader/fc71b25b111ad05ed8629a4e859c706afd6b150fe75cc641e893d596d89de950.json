{"ast":null,"code":"import { MetaMaskSDK } from '@metamask/sdk';\nconst {\n  Buffer\n} = require('buffer');\nexport default {\n  name: 'MetaMaskComponent',\n  data() {\n    return {\n      sdk: null,\n      accounts: null,\n      chainId: null,\n      connected: false,\n      lastResponse: null\n    };\n  },\n  created() {\n    this.sdk = new MetaMaskSDK({\n      dappMetadata: {\n        url: window.location.href,\n        name: 'MetaMask VueJS Example Dapp'\n      },\n      enableDebug: true,\n      autoConnect: {\n        enable: true\n      },\n      logging: {\n        developerMode: true\n      },\n      storage: {\n        enabled: true\n      }\n    });\n  },\n  mounted() {\n    if (this.sdk?.isInitialized()) {\n      // Chain changed\n      window.ethereum?.on(\"chainChanged\", chain => {\n        console.log(`App::Chain changed:'`, chain);\n        this.chainId = chain;\n      });\n\n      // Accounts changed\n      window.ethereum?.on(\"accountsChanged\", accounts => {\n        console.log(`App::Accounts changed:'`, accounts);\n        this.accounts = accounts;\n      });\n\n      // Initialized event\n      window.ethereum?.on('_initialized', () => {\n        console.debug(`App::useEffect on _initialized`);\n        // Getting the accounts again to display in the UI\n        this.onConnect();\n        if (window.ethereum?.chainId) {\n          this.chainId = window.ethereum.chainId;\n        }\n      });\n\n      // Connected event\n      window.ethereum?.on('connect', _connectInfo => {\n        console.log(`App::connect`, _connectInfo);\n        this.connected = true;\n      });\n\n      // Disconnect event\n      window.ethereum?.on('disconnect', error => {\n        console.log(`App::disconnect`, error);\n        this.connected = false;\n      });\n    }\n  },\n  methods: {\n    async onConnect() {\n      try {\n        const res = await window.ethereum.request({\n          method: 'eth_requestAccounts',\n          params: []\n        });\n        this.accounts = res;\n        console.log('request accounts', res);\n        this.lastResponse = \"\";\n        this.chainId = window.ethereum.chainId;\n      } catch (e) {\n        console.log('request accounts ERR', e);\n      }\n    },\n    async addEthereumChain() {\n      try {\n        const res = await window.ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: '0x89',\n            chainName: 'Polygon',\n            blockExplorerUrls: ['https://polygonscan.com'],\n            nativeCurrency: {\n              symbol: 'MATIC',\n              decimals: 18\n            },\n            rpcUrls: ['https://polygon-rpc.com/']\n          }]\n        });\n        console.log('add', res);\n        this.lastResponse = res;\n      } catch (e) {\n        console.log('ADD ERR', e);\n      }\n    },\n    async onSign() {\n      try {\n        const from = window.ethereum?.selectedAddress;\n        const message = 'Hello World from the Vue Example dapp!';\n        const hexMessage = '0x' + Buffer.from(message, 'utf8').toString('hex');\n        const sign = await window.ethereum.request({\n          method: 'personal_sign',\n          params: [hexMessage, from, 'Example password']\n        });\n        console.log(sign);\n        this.lastResponse = sign;\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    terminate() {\n      this.sdk?.terminate();\n      this.accounts = null;\n      this.lastResponse = \"Terminated!\";\n      this.chainId = null;\n    }\n  }\n};","map":{"version":3,"names":["MetaMaskSDK","Buffer","require","name","data","sdk","accounts","chainId","connected","lastResponse","created","dappMetadata","url","window","location","href","enableDebug","autoConnect","enable","logging","developerMode","storage","enabled","mounted","isInitialized","ethereum","on","chain","console","log","debug","onConnect","_connectInfo","error","methods","res","request","method","params","e","addEthereumChain","chainName","blockExplorerUrls","nativeCurrency","symbol","decimals","rpcUrls","onSign","from","selectedAddress","message","hexMessage","toString","sign","err","terminate"],"sources":["/home/gluneau/GitHub/consensys/metamask-sdk-main/packages/examples/vuejs/src/components/MetaMaskComponent.vue"],"sourcesContent":["<template>\n  <div class=\"metamask-container\">\n    <button class=\"action-button\" @click=\"onConnect\">CONNECT</button>\n    <button class=\"action-button\" @click=\"onSign\">SIGN</button>\n    <button class=\"action-button\" @click=\"addEthereumChain\">\n      ADD POLYGON CHAIN\n    </button>\n    <button class=\"action-button\" @click=\"terminate\">TERMINATE</button>\n    <div class=\"spacer\">\n      {{connected ? 'CONNECTED' : 'NOT CONNECTED'}}\n    </div>\n    <div class=\"spacer\">\n      Accounts:\n      <ul>\n        <li v-for='account in accounts' :key='account'>\n          {{account}}\n        </li>\n      </ul>\n    </div>\n    <div class=\"spacer\">\n      ChainId: {{chainId}}\n    </div>\n    <div class=\"spacer\">\n      Last response: {{lastResponse}}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { MetaMaskSDK } from '@metamask/sdk';\nconst { Buffer } = require('buffer');\n\nexport default {\n  name: 'MetaMaskComponent',\n  data() {\n    return {\n      sdk: null,\n      accounts: null,\n      chainId: null,\n      connected: false,\n      lastResponse: null,\n    };\n  },\n  created() {\n    this.sdk = new MetaMaskSDK({\n      dappMetadata: {\n        url: window.location.href,\n        name: 'MetaMask VueJS Example Dapp',\n      },\n      enableDebug: true,\n      autoConnect: {\n        enable: true,\n      },\n      logging: {\n        developerMode: true,\n      },\n      storage: {\n        enabled: true,\n      },\n    });\n  },\n  mounted() {\n    if (this.sdk?.isInitialized()) {\n      // Chain changed\n      window.ethereum?.on(\"chainChanged\", (chain) => {\n        console.log(`App::Chain changed:'`, chain);\n        this.chainId = chain;\n      });\n\n      // Accounts changed\n      window.ethereum?.on(\"accountsChanged\", (accounts) => {\n        console.log(`App::Accounts changed:'`, accounts);\n        this.accounts = accounts;\n      });\n\n      // Initialized event\n      window.ethereum?.on('_initialized', () => {\n        console.debug(`App::useEffect on _initialized`);\n        // Getting the accounts again to display in the UI\n        this.onConnect();\n        if (window.ethereum?.chainId) {\n          this.chainId = window.ethereum.chainId;\n        }\n      });\n\n      // Connected event\n      window.ethereum?.on('connect', (_connectInfo) => {\n        console.log(`App::connect`, _connectInfo);\n        this.connected = true;\n      });\n\n      // Disconnect event\n      window.ethereum?.on('disconnect', (error) => {\n        console.log(`App::disconnect`, error);\n        this.connected = false;\n      });\n    }\n\n  },\n  methods: {\n    async onConnect() {\n      try {\n        const res = await window.ethereum.request({\n          method: 'eth_requestAccounts',\n          params: [],\n        });\n        this.accounts = res;\n        console.log('request accounts', res);\n        this.lastResponse = \"\";\n        this.chainId = window.ethereum.chainId;\n      } catch (e) {\n        console.log('request accounts ERR', e);\n      }\n    },\n    async addEthereumChain() {\n      try {\n        const res = await window.ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [\n            {\n              chainId: '0x89',\n              chainName: 'Polygon',\n              blockExplorerUrls: ['https://polygonscan.com'],\n              nativeCurrency: { symbol: 'MATIC', decimals: 18 },\n              rpcUrls: ['https://polygon-rpc.com/'],\n            },\n          ],\n        });\n        console.log('add', res);\n        this.lastResponse = res;\n      } catch (e) {\n        console.log('ADD ERR', e);\n      }\n    },\n    async onSign() {\n      try {\n        const from = window.ethereum?.selectedAddress;\n        const message = 'Hello World from the Vue Example dapp!';\n        const hexMessage = '0x' + Buffer.from(message, 'utf8').toString('hex');\n\n        const sign = await window.ethereum.request({\n          method: 'personal_sign',\n          params: [hexMessage, from, 'Example password'],\n        });\n        console.log(sign);\n        this.lastResponse = sign;\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    terminate() {\n      this.sdk?.terminate();\n      this.accounts = null;\n      this.lastResponse = \"Terminated!\";\n      this.chainId = null;\n    }\n  },\n};\n</script>\n\n<style scoped>\n.metamask-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 16px;\n}\n\n.action-button {\n  width: 100%;\n  max-width: 400px;\n  margin: 8px 0;\n  padding: 12px;\n  font-size: 16px;\n  text-align: center;\n  border: none;\n  border-radius: 4px;\n  background-color: #4a69bd;\n  color: white;\n  cursor: pointer;\n}\n\n.action-button:hover {\n  background-color: #3c5bb0;\n}\n\n.spacer {\n  height: 16px;\n  margin: 20px;\n}\n\n.deep-link {\n  font-size: 16px;\n  color: #4a69bd;\n  text-decoration: none;\n}\n\n.deep-link:hover {\n  text-decoration: underline;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}